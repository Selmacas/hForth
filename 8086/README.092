hForth 0.9.2판입니다. hForth는 무료 프로그램(free software)입니다.
이것을 개인적으로나 상업적으로나 어떤 목적에 사용해도 좋습니다. 단,
이 프로그램을 바로 팔아서는 안되고 (hForth를 써서 만든 프로그램을
파는 것은 제가 상관하지 않습니다) hForth라는 이름을 쓰려면 꾸러미의
파일들이 본래 상태로 있어야 합니다. 가능한 한 hForth를 널리 퍼뜨려
주십시오.

hForth에는 어셈블리 바탕본이 3 개, 실행 파일이 3 개 들어 있읍니다.
HF86ROM.COM은 ANSEF86.COM처럼 RAM과 ROM가 다른 주소에 있는
시스템에서 쓰이도록 만들었읍니다. HF86RAM.COM은 HF86RAM을 고쳐
RAM만을 쓰는 시스템 용으로 만들었읍니다. HF86EXE.EXE는 8086에서
코드와 자료를 다른 세그먼트에 넣고 여러 낱말을 기계어로
정의했읍니다. HF86EXE.EXE는 이렇게 해서 HF86ROM.COM과 HF86RAM.COM에
비해 두 배의 메모리를 쓸 수 있고 속도도 두 배 이상 빨라졌읍니다. 각
어셈블리어 바탕본의 첫 머리에 무엇을 바꾸었는지를 적어 두었읍니다.
한두개의 어셈블리어 낱말를 더한 것 말고는 똑같은 어셈블리어 낱말들을
써서 HF86ROM에서 HF86RAM과 HF86EXE를 만들어 내었읍니다. 아직 다른
프로세서에 hForth를 심지 않았지만 hForth가 이식하기 쉽게
설계되었다고 더 자신할 수 있게 되었읍니다. Z80 hForth 0.9.2도 이것과
함께 발표합니다. 조만간 8051 용 hForth도 발표할 예정입니다.

hForth 0.9.0 판에서 벌레를 몇 개 잡고 VALUE와 TO를 도입했읍니다.
'emit , 'key 등의 입출력 가리킴값은 이제 VARIABLE이 아니고
VALUE입니다. 따라서 0.9.0 판에서 아래처럼 정의되었던

    : EMIT   'emit @ EXECUTE ;

EMIT의 정의는 다음처럼 바뀌었읍니다. 이제

    'emit  EXECUTE

와

    ' EMIT  EXECUTE

는 같은 일을 합니다.

다중 작업 한글 입출력 프로그램 HIOMULTI.F를 완성했읍니다.
HF86EXE.EXE를 시작한 다음 아래처럼 해 보십시오.

    << OPTIONAL.F
    << MULTI.F
    << ASM8086.F
    << HIOMULTI.F

HF86RAM.COM에도 HIOMULTI.F를 올릴 수 있지만 HF86EXE.EXE가
HF86RAM.COM보다 훨씬 더 빠릅니다. hForth가 입력을 기다리는 동안에만
그래픽화면을 바꾸기 때문에 화면이 바뀌는 것이 훨씬 빠릅니다.
다중작업기를 쓰지 않는 포스 바탕본은 HOUT.F와 HIN.F로 나누었읍니다.
다중작업기를 쓰지 않는 한글 입출력 바탕본을 올리려면 아래처럼
하십시오.

    << OPTIONAL.F
    << ASM8086.F
    << HOUT.F
    << HIN.F
    << MULTI.F
    << HCURSOR.F

hForth는 1990 년에 Bill Muench와 Dr. C. H. Ting이 발표한 eForth를
바탕으로 만들어서 본래의 eForth의 특징들을 그대로 살렸읍니다.
아래는 8086 eForth 바탕본에서 따 온 것입니다.

    > 각각의 마이크로프로세서에 맞춘 몇 안되는 CODE 낱말들과 모든
    >	마이크로프로세서에 공통인 고급 (high level) 낱말들로
    >	이루어져 있읍니다.
    > 원시코드는 MASM 어셈블러용입니다.
    > 직접 꿴 (direct threaded) 방법을 씁니다.
    > 사전의 코드와 이름이 메모리에 따로 자리합니다.
    > 입출력은 가리킴 낱말을 통하고 주 컴퓨터(host computer)를
    >	단말기와 파일 입출력에 이용합니다.
    > 제안된 미국 표준 포스(ANS Forth)의 방향을 따랐읍니다.
    > 특정한 마이크로프로세서에 맞추어 최적화하기가 쉽습니다.

이것들은 그대로 hForth의 성질입니다. 그리고 hForth 는 앤시 표준
포스의 방향만을 따르는 것이 아니라 앤시 표준 포스의 요구 조건을 모두
만족하는 앤시 표준 포스 시스템입니다.

앤시 표준 포스의 CORE 낱말들은 모두 어셈블리어 바탕본에 들어
있읍니다. 완전한 TOOLS 낱말과 SEARCH ORDER 낱말과 SEARCH ORDER
EXTENSION 낱말들과 다른 쓸모있는 낱말들은 OPTIONAL.F에 들어
있읍니다. CORE 낱말들에는 벌레가 없다고 생각하지만 OPTIONAL.F에 들어
있는 낱말들에는 벌레가 숨어 있을지도 모르겠읍니다.

이 꾸러미에는 아래 파일들이 들어 있읍니다.

HF86ROM.ASM	IBM-PC 용 hForth 8086 ROM 모델의 TASM 바탕본.
HF86RAM.ASM	IBM-PC 용 hForth 8086 RAM 모델의 TASM 바탕본.
HF86EXE.ASM	IBM-PC 용 hForth 8086 EXE 모델의 TASM 바탕본.
HF86ROM.COM	hForth 8086 ROM 모델의 실행 파일.
HF86RAM.COM	hForth 8086 RAM 모델의 실행 파일.
HF86EXE.EXE	hForth 8086 EXE 모델의 실행 파일.
HFRAMHIO.COM	어셈블러와 한글입출력을 더한 RAM 모델의 실행 파일.
OPTIONAL.F	덧붙임 낱말(OPTIONAL wordset words)들의 포스 바탕본.
ASM8086.F	8086 어셈블러 포스 바탕본.
ASMTEST.F	8086 어셈블러를 시험하기 위한 포스 바탕본.
MULTI.F 	Bill Muench의 다중작업기(multitasker)의 포스 바탕본.
MULDEMO.F	다중 작업기를 시험하기 위한 간단한 포스 바탕본.
HOUT.F		그래픽 화면에 한글을 보이는 포스 바탕본.
HIN.F		두벌 자판에서 한글을 입력하기 위한 포스 바탕본.
HCURSOR.F	한글 입력 반디를 보이기 위한 포스 바탕본.
HIOMULTI.F	다중작업기를 쓰는 한글입출력 포스 바탕본.
DOSEXEC.F	hForth 실행 파일에서 도스 프로그램을 부르기 위한 포스 바탕본.
README.ENG	영문 설명서.
README.TXT	이 파일.

각 실행 파일들은 아래 방법으로 만들었읍니다.

>TASM /ml HF86ROM
>TLINK /t HF86ROM or TLINK /t HF86RAM or TLINK HF86EXE

SAVE-SYSTEM 낱말을 써서 다음 번에 시스템이 시작할 때 SAVE-SYSTEM을
시킨 때의 상태로 돌아오게 할 수 있읍니다. 이렇게 하려면 비휘발성
메모리를 쓰거나 다른 방법으로 메모리의 내용을 저장해 두어야 합니다.
*.COM 파일에 대해서는 도스의 DEBUG 명령을 써서 이 일을 할 수
있읍니다. 꾸러미 안의 HF86ROM.COM과 HF86RAM.COM은 OPTIONAL.F의
낱말들을 넣고 저장한 것입니다. HF86EXE.EXE는 'HLINK HF86EXE'로 만든
그대로의 실행 파일입니다. 파일 낱말들을 더하고 나면 HF86EXE.EXE의
상태도 저장할 수 있을 것입니다.

지금의 hForth 모델들에는 파일 낱말들이 없읍니다. 그리고 원래의
eForth처럼 한 장 컴퓨터에서 호스트 컴퓨터를 단말기로 사용한다면 파일
낱말들이 필요하지 않습니다. 그러나 이 꾸러미 안에 들어 있는 IBM PC용
hForth 모델들에는 포스 바탕본을 올릴 다른 방법이 필요합니다. 도스의
입력 방향 바꾸기(input redirection) 기능을 써서 이 일을 할 수
있읍니다. IBM PC용 hForth 실행 파일들에서 낱말 '<<'을 써서 포스
바탕본을 올릴 수 있읍니다. 이것과 도스의 DEBUG 명령과 SAVE-SYSTEM을
써서 포스 낱말들을 더한 실행 파일을 만들 수 있읍니다.
HF86ROM.COM에서는 RAM 자리의 내용을 갈무리할 필요가 없고 ROM 자리의
내용은 모두 저장되므로 문제가 없읍니다. 그렇지만 HF86RAM.COM에
대해서는 DEBUG 프로그램의 'W' 명령으로 갈무리를 하기 전에, 낱말
HERE가 돌려주는 값에서 도스의 PSP영역 256 바이트를 뺀 것만큼만
갈무리하겠다고 DEBUG 프로그램에게 말해 주어야 합니다.  아래처럼
합니다.

    >DEBUG HF86ROM.COM	    <-- DOS command line
    -G			    <-- DEBUG command

    hForth 8086 ROM Model v0.9.1 by Wonyong Koh, 1995
    All noncommercial and commercial uses are granted.
    Please send comment, bug report or suggestions to:
      wykoh@pado.krict.re.kr or 82-42-861-4245 (FAX)

    << OPTIONAL.F ok	    <-- In hForth ROM model
    ...
    ...
      << CON ok
    SAVE-SYSTEM ok	    <-- In hForth ROM model
    BYE 		    <-- In hForth ROM model
    Program completed processing.

    -W			    <-- DEBUG command
    Writing 07F00 bytes
    -Q			    <-- DEBUG command
    >			    <-- DOS command line. It's done.

Here goes how you extend HF86RAM.COM .

    >DEBUG HF86RAM.COM	    <-- DOS command line
    -G			    <-- DEBUG command

    hForth 8086 RAM Model v0.9.1 by Wonyong Koh, 1995
    All noncommercial and commercial uses are granted.
    Please send comment, bug report or suggestions to:
      wykoh@pado.krict.re.kr or 82-42-861-4245 (FAX)

    << OPTIONAL.F ok	    <-- In hForth RAM model
    ...
    ...
      << CON ok
    HEX HERE . 3610 ok	    <-- In hForth RAM model
    DECIMAL SAVE-SYSTEM ok  <-- In hForth RAM model
    BYE 		    <-- In hForth RAM model
    Program completed processing.

    -RCX		    <-- DEBUG command
    CX 2CF0
    :3510
    -W			    <-- DEBUG command
    Writing 03510 bytes
    -Q			    <-- DEBUG command
    >			    <-- DOS command line. It's done.

여러 달의 노력 끝에 hForth가 이만큼의 모습을 갖추게 되었읍니다. 이제
파일 낱말과 한글 출력 그래픽 화면에 로고(LOGO)의 거북 그림(Turtle
Graphics)을 넣으면 계획했던 대로 국민학교 중학교의 XT 컴퓨터로
우리말을 써서 프로그래밍을 배울 수 있는 포스 시스템을 만들 수 있을
것입니다. 사용 설명서을 쓰고 이것을 널리 보급하려면 아직도 갈 길이
멉니다. 여러 분의 도움이 필요합니다. 여러 분의 의견, 제안, 비평을
제게 말씀해 주십시오. 도움을 주실 수 있다면 더욱 좋습니다.

1995. 8. 6.

고원용
하이텔: wykoh
인터넷: wykoh@pado.krict.re.kr
