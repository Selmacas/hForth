#!/bin/sh
#
# $Id: build,v 1.8 1999/07/13 21:50:08 crook Exp $
#
# $Log: build,v $
# Revision 1.8  1999/07/13 21:50:08  crook
# add eb-amcu
#
# Revision 1.7  1997/08/18 10:27:25  crook
# fix tidy-up at end
#
# Revision 1.6  1997/08/18 10:22:59  crook
# update to allow DEMON version to be built, and to add release script
#
# Revision 1.5  1997/04/30 20:32:43  crook
# first working 21285 port
#
# Revision 1.3  1997/03/03 09:51:13  crook
# update for new build options in hfsarom.asm
#
# Revision 1.2  1997/03/01 17:04:53  crook
# show usage of udebug parameter inot makesrc
#
# Revision 1.1  1997/01/13 09:41:28  crook
# Initial revision
#
#
# Targets are: all, pie, piedemon, ebsa110demon, ebsa110boot, ebsa110flash
# refer to hfsarom.asm for a description of each target
#
# NOTE: if you run on the PIE Card, don't try to use the cache stuff or
# the W@, W! instructions, because they won't work!!
#
# yes, I could have used make, but it didn't seem to give any advantage here.
#

#default_target=ebsa110pbl
default_target=ebamcuangel

target=${1:-$default_target}



# build some images -nodebug to make them smaller? need KEEP in assembler source to make a difference


if [ $target = all ] || [ $target = ebamcuangel ] ; then
  echo
  echo building hfmcuan.aif for EB-AMCU, for loading and starting via Angel
  rm -f hfsarom.lst hfsarom.o
  gawk -f modsntx.awk hfsarom.asm
  # Code starts at 0x8000, ends at 0x18000 so dict_pc is 0x1800
  gawk -v dict_pc=98304 -f makesrc.awk hfsarom.asms
  armasm -ARCH 4 hfsarom.asmsw -list hf.lst -PD 'TARGET SETS "EBAMCU"' -PD 'MEMMAP SETS "ANGEL"' -PD 'DEFIO SETS "COMASWI"' -PD 'DEFBAUD SETA 4'
  armlink -aif -base 0x8000 -entry 0x8080 -output hfmcuan.aif hfsarom.o -nodebug
  cp hfmcuan.aif ../image
fi

# TODO: should leave a gap at the top of the image so there is room for the PIL header.

if [ $target = all ] || [ $target = ebamcupil ] ; then
  echo
  echo building hfmcupl.aif for EB-AMCU, for loading and starting via the primary image loader
  rm -f hfsarom.lst hfsarom.o
  gawk -f modsntx.awk hfsarom.asm
  # code starts at 0, ends at 0x10000 - 0x20 (the trailer) , gets copied into place by the PIL
#  gawk -v udebug=1 dict_pc=65504 -f makesrc.awk hfsarom.asms
  gawk -v dict_pc=65504 -f makesrc.awk hfsarom.asms
  armasm -ARCH 4 hfsarom.asmsw -list hf.lst -PD 'TARGET SETS "EBAMCU"' -PD 'MEMMAP SETS "PBLOADED"' -PD 'DEFIO SETS "COM1"' -PD 'DEFBAUD SETA 4'
  armlink -aif -bin -base 0x80 -entry 0x80 -nodebug -output hfmcupl.aif hfsarom.o -nodebug
  cp hfmcupl.aif ../image
fi

if [ $target = all ] || [ $target = ebamcuboot ] ; then
  echo
  echo building hfmcubo.bin for EB-AMCU, for loading and starting as a boot ROM
  rm -f hfsarom.lst hfsarom.o
  gawk -f modsntx.awk hfsarom.asm
  # code starts at 0, ends at 0x10000 -0x20 (the trailer), contains its own code for init and copying from ROM.
#  gawk -v udebug=1 dict_pc=65504 -f makesrc.awk hfsarom.asms
  gawk -v dict_pc=65504 -f makesrc.awk hfsarom.asms
  armasm -ARCH 4 hfsarom.asmsw -list hf.lst -PD 'TARGET SETS "EBAMCU"' -PD 'MEMMAP SETS "BOOT"' -PD 'DEFIO SETS "COM1"' -PD 'DEFBAUD SETA 4'
  armlink -bin -base 0x0 -entry 0x0 -nodebug -output hfmcubo.bin hfsarom.o -nodebug
  cp hfmcubo.bin ../image
fi




if [ $target = release ]  ; then
  echo
  echo building set of release files in release
  rm -rf release/*
  co build modsntx.awk dat2tad.awk makesrc.awk
  cp build modsntx.awk dat2tad.awk makesrc.awk release

  co optional.f coreext.f multi.f muldemo.f double.f 110_hu.f 285_hu.f
  cp optional.f coreext.f multi.f muldemo.f double.f 110_hu.f 285_hu.f release

  co hfsarom.asm
  cp hfsarom.asm release

  ./build ebsa285pbl
  ./build ebsa110pbl
  ./build ebsa110demon
  cp hf285bl.aif hf110bl.aif hf110dm.aif release

  co readme.eng readme.kor readme.ks
  cp readme.eng readme.kor readme.ks release

  co whatsnew.eng whatsnew.kor whatsnew.ks
  cp whatsnew.eng whatsnew.kor whatsnew.ks release

  co hforth.html
  cp hforth.html release
  co readme.arm
  cp readme.arm release

  tar cf hf.tar release
  gzip hf.tar
  uuencode hf.tar.gz hf.tar.gz > hfarm.uu
fi

# rm -f hfsarom.o hfsarom.asms hfsarom.asmsc hfsarom.asmsd hfsarom.asmst hfsarom.asmsw mucca.txt

exit 0





